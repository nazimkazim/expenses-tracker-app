{"version":3,"sources":["utils.js","components/DisplayTransaction.jsx","components/LineGraph.jsx","components/DoughnutComponent.jsx","components/SelectComponent.jsx","components/InputComponent.jsx","components/TotalComponent.jsx","Main.jsx","AddCategories.jsx","components/Navbar.jsx","App.jsx","index.js"],"names":["customStyles","content","display","flexDirection","justifyContent","alignItems","top","left","right","bottom","marginRight","transform","width","height","borderRadius","adaptLabelsForDoughnutChart","data","categories","map","o","category","filter","index","includes","DisplayTransaction","transactions","deleteTransaction","className","sort","a","b","key1","Date","date","key2","transaction","description","amount","type","format","onClick","id","LineGraph","lineChartType","datasetIdKey","labels","datasets","label","fill","backgroundColor","borderColor","DaughnutComponent","item","Number","reduce","acc","curr","find","push","SelectComponent","setValue","value","onChange","e","target","InputComponent","htmlFor","TotalComponent","calculateTotal","Chart","register","registerables","Main","useState","modalIsOpen","setIsOpen","setDescription","setAmount","setType","startDate","setStartDate","setTransactions","setCategories","chosenCategory","setChosenCategory","buttonIsActive","setButtonIsActive","setLineChartType","closeModal","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","isOpen","onRequestClose","style","contentLabel","selected","disabled","uuidv4","transactionsFromLocalStorage","newTransactions","AddCategories","React","setCategory","expensesCategories","setExpensesCategories","incomeCategories","setIncomeCategories","getDataFromLocalStorage","categoryName","func","addExpenseAndIncomeCategories","categoryFromLS","setter","prev","deleteItemHandler","newExpensesCategories","_","i","newIncomeCategories","preventDefault","alert","addCategoryHandler","Navbar","to","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"4TAAaA,EAAe,CAC1BC,QAAS,CACPC,QAAS,OACTC,cAAe,SACfC,eAAgB,aAChBC,WAAY,SACZC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,MAAM,QACNC,OAAO,QACPC,aAAa,SAIJC,EAA8B,SAACC,GAC1C,IAAMC,EAAaD,EAAKE,KAAI,SAACC,GAAC,OAAKA,EAAEC,QAAQ,IAI7C,OAHiBJ,EAAKK,QACpB,WAAeC,GAAK,IAAjBF,EAAQ,EAARA,SAAQ,OAAeH,EAAWM,SAASH,EAAUE,EAAQ,EAAE,GAGtE,E,uDCkCeE,EAtDY,SAAH,GAGjB,IAAD,EAFFC,EAAY,EAAZA,aACAC,EAAiB,EAAjBA,kBAEF,OACE,qBAAKC,UAAU,uBAAsB,SACtB,OAAZF,QAAY,IAAZA,GAYG,QAZS,EAAZA,EACGG,MAAK,SAAUC,EAAGC,GAClB,IAAIC,EAAO,IAAIC,KAAKH,EAAEI,MAClBC,EAAO,IAAIF,KAAKF,EAAEG,MAEtB,OAAIF,EAAOG,GACD,EACCH,GAAQG,EACV,EAEA,CAEX,WAAE,WAZS,EAAZ,EAaGhB,KAAI,SAACiB,GAAW,OAChB,sBAA0BR,UAAU,cAAa,UAC/C,qBAAKA,UAAU,OAAM,SACnB,4BAAIQ,EAAYC,gBAElB,qBAAKT,UAAU,OAAM,SACnB,4BAAIQ,EAAYE,WAElB,qBACEV,UAAS,eACc,WAArBQ,EAAYG,KAAoB,SAAW,WAC1C,SAEH,4BAAIH,EAAYG,SAElB,qBAAKX,UAAU,OAAM,SACnB,4BAAIQ,EAAYf,aAElB,qBAAKO,UAAU,OAAM,SACnB,cAAC,IAAM,CAACY,OAAO,WAAU,SAAEJ,EAAYF,SAEzC,qBAAKN,UAAU,OAAM,SACnB,wBACEa,QAAS,kBAAMd,EAAkBS,EAAYM,GAAG,EAChDd,UAAU,gBAAe,wBAvBrBQ,EAAYM,GA4BhB,KAIhB,E,iBCVeC,G,MAzCG,SAAH,GAGR,IAFHjB,EAAY,EAAZA,aACAkB,EAAa,EAAbA,cAEF,OACE,qBAAKhB,UAAU,aAAY,SACzB,cAAC,IAAI,CACHiB,aAAa,KACb5B,KAAM,CACJ6B,OAAQpB,EAAaP,KAAI,SAACiB,GAAW,OACnCI,kBAAO,IAAIP,KAAKG,EAAYF,MAAO,WAAW,IAEhDa,SAAU,CACR,CACEC,MAAOJ,EACP3B,KAAkB,OAAZS,QAAY,IAAZA,OAAY,EAAZA,EACFG,MAAK,SAAUC,EAAGC,GAClB,IAAIC,EAAO,IAAIC,KAAKH,EAAEI,MAClBC,EAAO,IAAIF,KAAKF,EAAEG,MAEtB,OAAIF,EAAOG,GACD,EACCH,GAAQG,EACV,EAEA,CAEX,IACCb,QAAO,SAACc,GAAW,OAAKA,EAAYG,OAASK,CAAa,IAC1DzB,KAAI,SAACiB,GAAW,OAAKA,EAAYE,MAAM,IAC1CW,MAAM,EACNC,gBAAiB,oBACjBC,YAAa,gCAO3B,GCTeC,G,MA3BW,SAAH,GAAyC,IHkBtBnC,EGlBbS,EAAY,EAAZA,aAAckB,EAAa,EAAbA,cACzC,OACE,qBAAKhB,UAAU,WAAU,SACvB,cAAC,IAAQ,CACPX,KAAM,CACJ6B,OAAQ9B,EAA4BU,GACjCJ,QAAO,SAAC+B,GAAI,OAAKA,EAAKd,OAASK,CAAa,IAC5CzB,KAAI,SAACkC,GAAI,OAAKA,EAAKhC,QAAQ,IAC9B0B,SAAU,CACR,CACEC,MAAOJ,EACP3B,MHO4BA,EGPIS,EHQ/BT,EACVE,KAAI,SAACF,GAAI,kCAAWA,GAAI,IAAEqB,OAAQgB,OAAOrC,EAAKqB,SAAO,IACrDiB,QAAO,SAACC,EAAKC,GACZ,IAAIJ,EAAOG,EAAIE,MAAK,SAACL,GAAI,OAAKA,EAAKhC,WAAaoC,EAAKpC,QAAQ,IAQ7D,OANIgC,EACFA,EAAKf,QAAUgB,OAAOG,EAAKnB,QAE3BkB,EAAIG,KAAKF,GAGJD,CACT,GAAG,KGnBUlC,QAAO,SAACc,GAAW,OAAKA,EAAYG,OAASK,CAAa,IAC1DzB,KAAI,SAACiB,GAAW,OAAKA,EAAYE,MAAM,IAC1CY,gBAAiB,CACf,0BACA,0BACA,iCAQhB,GCZeU,MAnBf,SAAyB,GAGrB,IAFAC,EAAQ,EAARA,SACAC,EAAK,EAALA,MAEF,OACE,yBACElC,UAAU,mBACVkC,MAAOA,EACPC,SAAU,SAACC,GACTH,EAASG,EAAEC,OAAOH,MACpB,EAAE,UAEF,2BACA,wBAAQA,MAAM,UAAS,qBACvB,wBAAQA,MAAM,SAAQ,sBAG5B,ECEeI,EAnBQ,SAAH,GAKb,IAJHL,EAAQ,EAARA,SACAC,EAAK,EAALA,MACApB,EAAE,EAAFA,GACAM,EAAK,EAALA,MAEF,OACE,sBAAKpB,UAAU,eAAc,UAC3B,uBAAOuC,QAASzB,EAAG,SAAEM,IACrB,uBACEc,MAAOA,EACPC,SAAU,SAACC,GAAC,OAAKH,EAASG,EAAEC,OAAOH,MAAM,EACzCvB,KAAK,OACLG,GAAIA,MAIZ,ECkBe0B,G,MAlCQ,SAAH,GAA0B,IAApB1C,EAAY,EAAZA,aAClB2C,EAAiB,SAAC3C,EAAca,GACpC,OAAOb,EAAa6B,QAAO,SAACC,EAAKpB,GAC/B,OAAIA,EAAYG,OAASA,EAChBiB,EAAMF,OAAOlB,EAAYE,QAE3BkB,CACT,GAAG,EACL,EACA,OACE,sBAAK5B,UAAU,QAAO,UACpB,sBAAKA,UAAU,aAAY,UACzB,wCACA,mBAAGc,GAAG,aAAad,UAAU,aAAY,SACtCyC,EAAe3C,EAAc,eAGlC,sBAAKE,UAAU,aAAY,UACzB,yCACA,mBAAGc,GAAG,cAAcd,UAAU,cAAa,SACxCyC,EAAe3C,EAAc,gBAGlC,sBAAKE,UAAU,aAAY,UACzB,kDACA,mBAAGc,GAAG,cAAcd,UAAU,QAAO,SAClCyC,EAAe3C,EAAc,UAC5B2C,EAAe3C,EAAc,kBAKzC,GC3BA4C,IAAMC,SAAQ,MAAdD,IAAK,YAAaE,MAUlB,IAyKeC,EAzKF,WACX,MAAiCC,oBAAS,GAAM,mBAAzCC,EAAW,KAAEC,EAAS,KAC7B,EAAsCF,mBAAS,IAAG,mBAA3CrC,EAAW,KAAEwC,EAAc,KAClC,EAA4BH,mBAAS,IAAG,mBAAjCpC,EAAM,KAAEwC,EAAS,KACxB,EAAwBJ,mBAAS,IAAG,mBAA7BnC,EAAI,KAAEwC,EAAO,KACpB,EAAkCL,mBAAS,IAAIzC,MAAO,mBAA/C+C,EAAS,KAAEC,EAAY,KAC9B,EAAwCP,mBAAS,IAAG,mBAA7ChD,EAAY,KAAEwD,EAAe,KACpC,EAAoCR,mBAAS,IAAG,mBAAzCxD,EAAU,KAAEiE,EAAa,KAChC,EAA4CT,mBAAS,IAAG,mBAAjDU,EAAc,KAAEC,EAAiB,KACxC,EAA4CX,oBAAS,GAAM,mBAApDY,EAAc,KAAEC,EAAiB,KACxC,EAA0Cb,mBAAS,UAAS,mBAArD9B,EAAa,KAAE4C,EAAgB,KAsCtC,SAASC,KACPX,EAAU,IACVD,EAAe,IACfE,EAAQ,IACRM,EAAkB,IAClBJ,EAAa,IAAIhD,MACjB2C,GAAU,EACZ,CA3CAc,qBAAU,WACJC,aAAaC,QAAQ,gBACvBV,EAAgBW,KAAKC,MAAMH,aAAaC,QAAQ,kBAEhDD,aAAaI,QAAQ,eAAgBF,KAAKG,UAAU,IAExD,GAAG,IAEHN,qBAAU,WAENP,EADW,WAAT5C,EACYsD,KAAKC,MAAMH,aAAaC,QAAQ,mBAC5B,YAATrD,EACKsD,KAAKC,MAAMH,aAAaC,QAAQ,mBAEhC,GAElB,GAAG,CAACrD,IAEJmD,qBAAU,WAQNH,EANmB,KAAnBH,GACgB,KAAhB/C,GACW,KAAXC,GACS,KAATC,GACc,KAAdyC,EAMJ,GAAG,CAAC3C,EAAaC,EAAQC,EAAMyC,EAAWI,IA4C1C,OACE,8BACE,sBAAKxD,UAAU,MAAK,UAClB,eAAC,IAAK,CACJqE,OAAQtB,EACRuB,eAAgBT,GAChBU,MAAOlG,EACPmG,aAAa,gBAAe,UAE5B,uDACA,cAAC,EAAc,CACbvC,SAAUgB,EACVf,MAAOzB,EACPK,GAAG,cACHM,MAAM,gBAER,cAAC,EAAc,CACba,SAAUiB,EACVhB,MAAOxB,EACPI,GAAG,SACHM,MAAM,WAER,sBAAKpB,UAAU,eAAc,UAC3B,uBAAOuC,QAAQ,OAAM,kBACrB,cAAC,EAAe,CAACN,SAAUkB,EAASjB,MAAOvB,OAE7C,sBAAKX,UAAU,eAAc,UAC3B,uBAAOuC,QAAQ,WAAU,wBACzB,yBACEL,MAAOsB,EACPrB,SAAU,SAACC,GAAC,OAAKqB,EAAkBrB,EAAEC,OAAOH,MAAM,EAClDpB,GAAG,WAAU,UAEb,wBAAQoB,MAAO,KACd5C,GACCA,EAAWC,KAAI,SAACE,GAAQ,OACtB,wBAAQyC,MAAOzC,EAAS,SAAEA,GAAkB,UAIpD,sBAAKO,UAAU,eAAc,UAC3B,uBAAOuC,QAAQ,OAAM,kBACrB,cAAC,IAAU,CACTkC,SAAUrB,EACVjB,SAAU,SAAC7B,GAAI,OAAK+C,EAAa/C,EAAK,OAG1C,wBACEoE,UAAWhB,EACX7C,QA9EgB,WACxB,IAAML,EAAc,CAClBM,GAAI6D,cACJlE,cACAC,SACAC,OACAlB,SAAU+D,EACVlD,KAAM8C,GAEFwB,EAA+BX,KAAKC,MACxCH,aAAaC,QAAQ,iBAEjBa,EAAe,sBAAOD,GAA4B,CAAEpE,IAC1D8C,EAAgBuB,GAChBd,aAAaI,QAAQ,eAAgBF,KAAKG,UAAUS,IACpDhB,IACF,EA+DU7D,UAAU,gBAAe,uBAK7B,sBAAKA,UAAU,YAAW,UACxB,gEACA,cAAC,EAAe,CAACiC,SAAU2B,EAAkB1B,MAAOlB,IACpD,cAAC,EAAS,CACRlB,aAAcA,EACdkB,cAAeA,IAEjB,cAAC,EAAiB,CAChBlB,aAAcA,EACdkB,cAAeA,OAGnB,sBAAKhB,UAAU,aAAY,UACzB,kDACA,wBAAQa,QA/GhB,WACEmC,GAAU,EACZ,EA6GoChD,UAAU,cAAa,gCAGnD,cAAC,EAAc,CAACF,aAAcA,IAC9B,cAAC,EAAkB,CACjBC,kBArFgB,SAACe,GACzB,IAGM+D,EAH+BZ,KAAKC,MACxCH,aAAaC,QAAQ,iBAE8BtE,QACnD,SAACc,GAAW,OAAKA,EAAYM,KAAOA,CAAE,IAExCwC,EAAgBuB,GAChBd,aAAaI,QAAQ,eAAgBF,KAAKG,UAAUS,GACtD,EA6EU/E,aAAcA,WAM1B,ECtDegF,G,OAhIO,WACpB,MAAgCC,IAAMjC,SAAS,IAAG,mBAA3CrD,EAAQ,KAAEuF,EAAW,KAC5B,EAA0BD,IAAMjC,SAAS,IAAG,mBAArCZ,EAAK,KAAED,EAAQ,KACtB,EAAoD8C,IAAMjC,SAAS,IAAG,mBAA/DmC,EAAkB,KAAEC,EAAqB,KAChD,EAAgDH,IAAMjC,SAAS,IAAG,mBAA3DqC,EAAgB,KAAEC,EAAmB,KAEtCC,EAA0B,SAACC,EAAcC,GACzCxB,aAAaC,QAAQsB,GACvBC,EAAKtB,KAAKC,MAAMH,aAAaC,QAAQsB,KAErCvB,aAAaI,QAAQmB,EAAcrB,KAAKG,UAAU,IAEtD,EAEAW,IAAMjB,WAAU,WACduB,EAAwB,iBAAkBH,GAC1CG,EAAwB,iBAAkBD,EAC5C,GAAG,IAEH,IAAMI,EAAgC,SAACC,EAAgBC,GACrDA,GAAO,SAACC,GAAI,4BAASA,GAAI,CAAEzD,GAAQ,IACjC6B,aAAaI,QACXsB,EACAxB,KAAKG,UAAU,GAAD,mBAAKa,GAAkB,CAAE/C,MAEzC8C,EAAY,IACZ/C,EAAS,GAEb,EAkBM2D,EAAoB,SAACjF,EAAMhB,GAC/B,GAAa,YAATgB,EAAoB,CACtB,IAAMkF,EAAwBZ,EAAmBvF,QAC/C,SAACoG,EAAGC,GAAC,OAAKA,IAAMpG,CAAK,IAEvBuF,EAAsBW,GACtB9B,aAAaI,QACX,iBACAF,KAAKG,UAAUyB,GAEnB,CAEA,GAAa,WAATlF,EAAmB,CACrB,IAAMqF,EAAsBb,EAAiBzF,QAC3C,SAACoG,EAAGC,GAAC,OAAKA,IAAMpG,CAAK,IAEvByF,EAAoBY,GACpBjC,aAAaI,QACX,iBACAF,KAAKG,UAAU4B,GAEnB,CACF,EAEA,OACE,sBAAKhG,UAAU,iBAAgB,UAC7B,gDACA,yBACEmC,SAAU,SAACC,GAAC,OAAK4C,EAAY5C,EAAEC,OAAOH,MAAM,EAC5ClC,UAAU,SACVkC,MAAOzC,EAAS,UAEhB,wBAAQyC,MAAM,GAAE,6BAChB,wBAAQA,MAAM,SAAQ,oBACtB,wBAAQA,MAAM,UAAS,wBAEzB,uBACElC,UAAU,QACVW,KAAM,OACNuB,MAAOA,EACPC,SAAU,SAACC,GAAC,OAAKH,EAASG,EAAEC,OAAOH,MAAM,IAE3C,wBACElC,UAAU,aACVa,QAAS,SAACuB,IA5DW,SAACA,GAC1BA,EAAE6D,iBACe,KAAbxG,GAA6B,KAAVyC,GAKN,YAAbzC,GAAoC,KAAVyC,GAC5BsD,EAA8B,iBAAkBN,GAGjC,WAAbzF,GAAmC,KAAVyC,GAC3BsD,EAA8B,iBAAkBJ,IAThDc,MAAM,6BAWV,CA+CQC,CAAmB/D,EACrB,EAAE,iBAIJ,sBAAKpC,UAAU,qBAAoB,UACjC,sBAAKA,UAAU,kBAAiB,UAC9B,qDACCiF,EAAmB1F,KAAI,SAACkC,EAAM9B,GAC7B,OACE,gCACE,4BAAgB8B,GAAR9B,GACR,wBAAQkB,QAAS,kBAAM+E,EAAkB,UAAWjG,EAAM,EAAC,iBAKjE,OAEF,sBAAKK,UAAU,kBAAiB,UAC9B,mDACCmF,EAAiB5F,KAAI,SAACkC,EAAM9B,GAC3B,OACE,gCACE,4BAAgB8B,GAAR9B,GACR,wBAAQkB,QAAS,kBAAM+E,EAAkB,SAAUjG,EAAM,EAAC,iBAKhE,YAKV,GC7GeyG,G,OAhBA,WACb,OACE,sBAAKpG,UAAU,SAAQ,UACnB,cAAC,IAAI,UACD,kDAEJ,cAAC,IAAI,CAACqG,GAAI,IAAI,SACV,uCAEJ,cAAC,IAAI,CAACA,GAAI,kBAAkB,SACxB,mDAIZ,GCCeC,G,OAZH,WACV,OACE,eAAC,IAAa,WACZ,cAAC,EAAM,IACP,eAAC,IAAM,WACL,cAAC,IAAK,CAACC,KAAK,IAAIC,QAAS,cAAC,EAAI,MAC9B,cAAC,IAAK,CAACD,KAAK,kBAAkBC,QAAS,cAAC,EAAa,WAI7D,G,OCZaC,IAASC,WAAWC,SAASC,eAAe,SAEpDC,OAAO,cAAC,EAAG,I","file":"static/js/main.356585ed.chunk.js","sourcesContent":["export const customStyles = {\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    width:'600px',\n    height:'600px',\n    borderRadius:'10px'\n  },\n};\n\nexport const adaptLabelsForDoughnutChart = (data) => {\n  const categories = data.map((o) => o.category);\n  const filtered = data.filter(\n    ({ category }, index) => !categories.includes(category, index + 1)\n  );\n  return filtered;\n};\n\nexport const adaptDataForDoughnutChart = (data) => {\n  let result = data\n    .map((data) => ({ ...data, amount: Number(data.amount) }))\n    .reduce((acc, curr) => {\n      let item = acc.find((item) => item.category === curr.category);\n\n      if (item) {\n        item.amount += Number(curr.amount);\n      } else {\n        acc.push(curr);\n      }\n\n      return acc;\n    }, []);\n  return result;\n};\n","import React from \"react\";\nimport './displayTransaction.css';\nimport Moment from \"react-moment\";\n\nconst DisplayTransaction = ({\n    transactions,\n    deleteTransaction,\n}) => {\n  return (\n    <div className=\"display-transactions\">\n      {transactions\n        ?.sort(function (a, b) {\n          var key1 = new Date(a.date);\n          var key2 = new Date(b.date);\n\n          if (key1 < key2) {\n            return -1;\n          } else if (key1 == key2) {\n            return 0;\n          } else {\n            return 1;\n          }\n        })\n        ?.map((transaction) => (\n          <div key={transaction.id} className=\"transaction\">\n            <div className=\"cell\">\n              <p>{transaction.description}</p>\n            </div>\n            <div className=\"cell\">\n              <p>{transaction.amount}</p>\n            </div>\n            <div\n              className={`cell ${\n                transaction.type === \"income\" ? \"income\" : \"expense\"\n              }`}\n            >\n              <p>{transaction.type}</p>\n            </div>\n            <div className=\"cell\">\n              <p>{transaction.category}</p>\n            </div>\n            <div className=\"cell\">\n              <Moment format=\"DD/MM/YY\">{transaction.date}</Moment>\n            </div>\n            <div className=\"cell\">\n              <button\n                onClick={() => deleteTransaction(transaction.id)}\n                className=\"delete-button\"\n              >\n                delete\n              </button>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default DisplayTransaction;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport { Line } from \"react-chartjs-2\";\nimport './LineGraph.css';\n\nconst LineGraph = ({\n    transactions,\n    lineChartType,\n}) => {\n  return (\n    <div className=\"line-chart\">\n      <Line\n        datasetIdKey=\"id\"\n        data={{\n          labels: transactions.map((transaction) =>\n            format(new Date(transaction.date), \"dd/MM/yy\")\n          ),\n          datasets: [\n            {\n              label: lineChartType,\n              data: transactions\n                ?.sort(function (a, b) {\n                  var key1 = new Date(a.date);\n                  var key2 = new Date(b.date);\n\n                  if (key1 < key2) {\n                    return -1;\n                  } else if (key1 == key2) {\n                    return 0;\n                  } else {\n                    return 1;\n                  }\n                })\n                .filter((transaction) => transaction.type === lineChartType)\n                .map((transaction) => transaction.amount),\n              fill: false,\n              backgroundColor: \"rgb(75, 192, 192)\",\n              borderColor: \"rgba(75, 192, 192, 0.2)\",\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n};\n\nexport default LineGraph;\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  adaptDataForDoughnutChart,\n  adaptLabelsForDoughnutChart,\n} from \"../utils\";\nimport \"./DoughnutComponent.css\";\n\nconst DaughnutComponent = ({ transactions, lineChartType }) => {\n  return (\n    <div className=\"doughnut\">\n      <Doughnut\n        data={{\n          labels: adaptLabelsForDoughnutChart(transactions)\n            .filter((item) => item.type === lineChartType)\n            .map((item) => item.category),\n          datasets: [\n            {\n              label: lineChartType,\n              data: adaptDataForDoughnutChart(transactions)\n                .filter((transaction) => transaction.type === lineChartType)\n                .map((transaction) => transaction.amount),\n              backgroundColor: [\n                \"rgba(255, 99, 132, 0.2)\",\n                \"rgba(54, 162, 235, 0.2)\",\n                \"rgba(255, 206, 86, 0.2)\",\n              ],\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n};\n\nexport default DaughnutComponent;\n","import React from \"react\";\n\nfunction SelectComponent({\n    setValue,\n    value,\n}) {\n  return (\n    <select\n      className=\"left-part-select\"\n      value={value}\n      onChange={(e) => {\n        setValue(e.target.value);\n      }}\n    >\n      <option></option>\n      <option value=\"expense\">Expense</option>\n      <option value=\"income\">Income</option>\n    </select>\n  );\n}\n\nexport default SelectComponent;\n","import React from \"react\";\n\nconst InputComponent = ({\n    setValue,\n    value,\n    id,\n    label\n}) => {\n  return (\n    <div className=\"input-holder\">\n      <label htmlFor={id}>{label}</label>\n      <input\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        type=\"text\"\n        id={id}\n      />\n    </div>\n  );\n};\n\nexport default InputComponent;\n","import React from \"react\";\nimport \"./TotalComponent.css\";\n\nconst TotalComponent = ({ transactions }) => {\n  const calculateTotal = (transactions, type) => {\n    return transactions.reduce((acc, transaction) => {\n      if (transaction.type === type) {\n        return acc + Number(transaction.amount);\n      }\n      return acc;\n    }, 0);\n  };\n  return (\n    <div className=\"total\">\n      <div className=\"cell-total\">\n        <h4>Income</h4>\n        <p id=\"money-plus\" className=\"money plus\">\n          {calculateTotal(transactions, \"income\")}\n        </p>\n      </div>\n      <div className=\"cell-total\">\n        <h4>Expense</h4>\n        <p id=\"money-minus\" className=\"money minus\">\n          {calculateTotal(transactions, \"expense\")}\n        </p>\n      </div>\n      <div className=\"cell-total\">\n        <h4>Available Budget</h4>\n        <p id=\"money-total\" className=\"money\">\n          {calculateTotal(transactions, \"income\") -\n            calculateTotal(transactions, \"expense\")}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default TotalComponent;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Main.css\";\nimport Modal from \"react-modal\";\nimport DatePicker from \"react-datepicker\";\nimport { customStyles } from \"./utils.js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Chart, registerables } from \"chart.js\";\n\nChart.register(...registerables);\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DisplayTransaction from \"./components/DisplayTransaction\";\nimport LineGraph from \"./components/LineGraph\";\nimport DoughnutComponent from \"./components/DoughnutComponent\";\nimport SelectComponent from \"./components/SelectComponent\";\nimport InputComponent from \"./components/InputComponent\";\nimport TotalComponent from \"./components/TotalComponent\";\n\nconst Main = () => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [transactions, setTransactions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [chosenCategory, setChosenCategory] = useState(\"\");\n  const [buttonIsActive, setButtonIsActive] = useState(false);\n  const [lineChartType, setLineChartType] = useState(\"income\");\n\n  useEffect(() => {\n    if (localStorage.getItem(\"transactions\")) {\n      setTransactions(JSON.parse(localStorage.getItem(\"transactions\")));\n    } else {\n      localStorage.setItem(\"transactions\", JSON.stringify([]));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (type === \"income\") {\n      setCategories(JSON.parse(localStorage.getItem(\"inc-categories\")));\n    } else if (type === \"expense\") {\n      setCategories(JSON.parse(localStorage.getItem(\"exp-categories\")));\n    } else {\n      setCategories([]);\n    }\n  }, [type]);\n\n  useEffect(() => {\n    if (\n      chosenCategory !== \"\" &&\n      description !== \"\" &&\n      amount !== \"\" &&\n      type !== \"\" &&\n      startDate !== \"\"\n    ) {\n      setButtonIsActive(true);\n    } else {\n      setButtonIsActive(false);\n    }\n  }, [description, amount, type, startDate, chosenCategory]);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setAmount(\"\");\n    setDescription(\"\");\n    setType(\"\");\n    setChosenCategory(\"\");\n    setStartDate(new Date());\n    setIsOpen(false);\n  }\n\n  const createTransaction = () => {\n    const transaction = {\n      id: uuidv4(),\n      description,\n      amount,\n      type,\n      category: chosenCategory,\n      date: startDate,\n    };\n    const transactionsFromLocalStorage = JSON.parse(\n      localStorage.getItem(\"transactions\")\n    );\n    const newTransactions = [...transactionsFromLocalStorage, transaction];\n    setTransactions(newTransactions);\n    localStorage.setItem(\"transactions\", JSON.stringify(newTransactions));\n    closeModal();\n  };\n\n  const deleteTransaction = (id) => {\n    const transactionsFromLocalStorage = JSON.parse(\n      localStorage.getItem(\"transactions\")\n    );\n    const newTransactions = transactionsFromLocalStorage.filter(\n      (transaction) => transaction.id !== id\n    );\n    setTransactions(newTransactions);\n    localStorage.setItem(\"transactions\", JSON.stringify(newTransactions));\n  };\n\n  return (\n    <div>\n      <div className=\"app\">\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <h2>Add Expense or Income</h2>\n          <InputComponent\n            setValue={setDescription}\n            value={description}\n            id=\"description\"\n            label=\"Description\"\n          />\n          <InputComponent\n            setValue={setAmount}\n            value={amount}\n            id=\"amount\"\n            label=\"Amount\"\n          />\n          <div className=\"input-holder\">\n            <label htmlFor=\"type\">Type</label>\n            <SelectComponent setValue={setType} value={type} />\n          </div>\n          <div className=\"input-holder\">\n            <label htmlFor=\"category\">Categories</label>\n            <select\n              value={chosenCategory}\n              onChange={(e) => setChosenCategory(e.target.value)}\n              id=\"category\"\n            >\n              <option value={\"\"}></option>\n              {categories &&\n                categories.map((category) => (\n                  <option value={category}>{category}</option>\n                ))}\n            </select>\n          </div>\n          <div className=\"input-holder\">\n            <label htmlFor=\"date\">Date</label>\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n            />\n          </div>\n          <button\n            disabled={!buttonIsActive}\n            onClick={createTransaction}\n            className=\"submit-button\"\n          >\n            submit\n          </button>\n        </Modal>\n        <div className=\"left-part\">\n          <h2>Visualize your income/expenses</h2>\n          <SelectComponent setValue={setLineChartType} value={lineChartType} />\n          <LineGraph\n            transactions={transactions}\n            lineChartType={lineChartType}\n          />\n          <DoughnutComponent\n            transactions={transactions}\n            lineChartType={lineChartType}\n          />\n        </div>\n        <div className=\"right-part\">\n          <h2>Expenses Tracker</h2>\n          <button onClick={openModal} className=\"add-exp-inc\">\n            Add Expense/Income\n          </button>\n          <TotalComponent transactions={transactions} />\n          <DisplayTransaction\n            deleteTransaction={deleteTransaction}\n            transactions={transactions}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport \"./AddCategories.css\";\n\nconst AddCategories = () => {\n  const [category, setCategory] = React.useState(\"\");\n  const [value, setValue] = React.useState(\"\");\n  const [expensesCategories, setExpensesCategories] = React.useState([]);\n  const [incomeCategories, setIncomeCategories] = React.useState([]);\n\n  const getDataFromLocalStorage = (categoryName, func) => {\n    if (localStorage.getItem(categoryName)) {\n      func(JSON.parse(localStorage.getItem(categoryName)));\n    } else {\n      localStorage.setItem(categoryName, JSON.stringify([]));\n    }\n  };\n\n  React.useEffect(() => {\n    getDataFromLocalStorage(\"exp-categories\", setExpensesCategories);\n    getDataFromLocalStorage(\"inc-categories\", setIncomeCategories);\n  }, []);\n\n  const addExpenseAndIncomeCategories = (categoryFromLS, setter) => {\n    setter((prev) => [...prev, value]);\n      localStorage.setItem(\n        categoryFromLS,\n        JSON.stringify([...expensesCategories, value])\n      );\n      setCategory(\"\");\n      setValue(\"\");\n      return;\n  }\n\n  const addCategoryHandler = (e) => {\n    e.preventDefault();\n    if (category === \"\" || value === \"\") {\n      alert(\"Please fill all the fields\");\n      return;\n    }\n\n    if (category === \"expense\" && value !== \"\") {\n      addExpenseAndIncomeCategories(\"exp-categories\", setExpensesCategories);\n    }\n\n    if (category === \"income\" && value !== \"\") {\n      addExpenseAndIncomeCategories(\"inc-categories\", setIncomeCategories);\n    }\n  };\n\n  const deleteItemHandler = (type, index) => {\n    if (type === \"expense\") {\n      const newExpensesCategories = expensesCategories.filter(\n        (_, i) => i !== index\n      );\n      setExpensesCategories(newExpensesCategories);\n      localStorage.setItem(\n        \"exp-categories\",\n        JSON.stringify(newExpensesCategories)\n      );\n    }\n\n    if (type === \"income\") {\n      const newIncomeCategories = incomeCategories.filter(\n        (_, i) => i !== index\n      );\n      setIncomeCategories(newIncomeCategories);\n      localStorage.setItem(\n        \"inc-categories\",\n        JSON.stringify(newIncomeCategories)\n      );\n    }\n  };\n\n  return (\n    <div className=\"add-categoties\">\n      <h2>Add Categories</h2>\n      <select\n        onChange={(e) => setCategory(e.target.value)}\n        className=\"select\"\n        value={category}\n      >\n        <option value=\"\">Select Category</option>\n        <option value=\"income\">Income</option>\n        <option value=\"expense\">Expense</option>\n      </select>\n      <input\n        className=\"input\"\n        type={\"text\"}\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <button\n        className=\"submit-btn\"\n        onClick={(e) => {\n          addCategoryHandler(e);\n        }}\n      >\n        Add\n      </button>\n      <div className=\"display-categories\">\n        <div className=\"category-column\">\n          <h3>Expenses Categories</h3>\n          {expensesCategories.map((item, index) => {\n            return (\n              <div>\n                <p key={index}>{item}</p>\n                <button onClick={() => deleteItemHandler(\"expense\", index)}>\n                  x\n                </button>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"category-column\">\n          <h3>Income Categories</h3>\n          {incomeCategories.map((item, index) => {\n            return (\n              <div>\n                <p key={index}>{item}</p>\n                <button onClick={() => deleteItemHandler(\"income\", index)}>\n                  x\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddCategories;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './navbar.css'\n\nconst Navbar = () => {\n  return (\n    <div className='navbar'>\n        <Link>\n            <p>Expense Tracker</p>\n        </Link>\n        <Link to={'/'}>\n            <p>Home</p>\n        </Link>\n        <Link to={'/add-categories'}>\n            <p>Add Categories</p>\n        </Link>\n    </div>\n  )\n}\n\nexport default Navbar","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Main from \"./Main\";\nimport AddCategories from \"./AddCategories\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<Main />}/>\n        <Route path=\"/add-categories\" element={<AddCategories />}/>\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport React from \"react\";\nimport App from './App';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root')\n);\nroot.render(<App />);\n"],"sourceRoot":""}